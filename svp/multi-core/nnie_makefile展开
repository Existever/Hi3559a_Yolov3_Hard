

#*********************************************************************************************************************************************************************
/home/rainzsy/projects/Hi3559A/V100R001C02SPC020/01.software/board/Hi3559AV100_SDK_V2.0.2.0/mpp/sample/Makefile

linux_svp:
	#使用cfg.mak.multicore 的参数配置编译环境
	cp ../cfg.mak.multicore ../cfg.mak
	@cd svp/multi-core; make  #zsy_0
	
#*********************************************************************************************************************************************************************
#zsy_0
/home/rainzsy/projects/Hi3559A/V100R001C02SPC020/01.software/board/Hi3559AV100_SDK_V2.0.2.0/mpp/sample/svp/multi-core/Makefile
rel:
	@cd ive;     make
	@cd dsp;     make
	@cd nnie;     make  #zsy_0_0
	@cd hirt;     make
	
	
#*********************************************************************************************************************************************************************
#zsy_0_0
/home/rainzsy/projects/Hi3559A/V100R001C02SPC020/01.software/board/Hi3559AV100_SDK_V2.0.2.0/mpp/sample/svp/multi-core/nnie/Makefile	

	# Hisilicon Hi35xx sample Makefile
	#zsy_1
	include $(PWD)/../Makefile.param    

	CFLAGS += -I$(PWD)/sample
	CFLAGS += -I$(PWD)/sample_nnie_software
	CFLAGS += -O3

	SRCS := $(wildcard *.c)
	SRCS += $(wildcard ./sample/*.c)
	SRCS += $(wildcard ./sample_nnie_software/*.c)
	SRCS += $(wildcard $(PWD)/../common/*.c)
	TARGET := sample_nnie_main

	# compile linux or HuaweiLite,利用设置参数编译
	#zsy_2
	include $(PWD)/../../../$(OSTYPE).mak


#*********************************************************************************************************************************************************************
#zsy_1
/home/rainzsy/projects/Hi3559A/V100R001C02SPC020/01.software/board/Hi3559AV100_SDK_V2.0.2.0/mpp/sample/svp/multi-core/Makefile.param  
		# Hisilicon Hi35xx sample Makefile.param
		#zsy_1_1
		#编译hisixx sample各个例程需要的公用编译参数
		export PARAM_FILE := ../../../../Makefile.param   
		include $(PARAM_FILE)
		#sample下的common文件，包括vi,vo,loadbmp等
		COMMON_DIR:=$(PWD)/../../../common
		AUDIO_ADP_DIR:=$(PWD)/../../../audio/adp
		
		
		#zsy_1_2
		#加载传感器需要的参数
		include ../../../Makefile.param					

		MPI_LIBS += $(REL_LIB)/libive.a
		MPI_LIBS += $(REL_LIB)/libmd.a
		MPI_LIBS += $(REL_LIB)/libdsp.a
		MPI_LIBS += $(REL_LIB)/libnnie.a
		#multi-core下的common，报告common_nnie,common_ive，common_svp等
		CFLAGS += -I$(PWD)/../common



#*********************************************************************************************************************************************************************
#zsy_2
/home/rainzsy/projects/Hi3559A/V100R001C02SPC020/01.software/board/Hi3559AV100_SDK_V2.0.2.0/mpp/sample/linux.mak


# target source
OBJS  := $(SRCS:%.c=%.o)
OBJS  := $(OBJS:%.cpp=%.o)

.PHONY : clean all

all: $(TARGET)

$(TARGET):$(COMM_OBJ) $(OBJS)	
	@$(CC) $(CFLAGS) -lpthread -lm -o $@ $^ $(MPI_LIBS) $(SENSOR_LIBS) $(AUDIO_LIBA) $(REL_LIB)/libsecurec.a

clean:
	@rm -f $(TARGET)
	@rm -f $(OBJS)
	@rm -f $(COMM_OBJ)

cleanstream:
	@rm -f *.h264
	@rm -f *.h265
	@rm -f *.jpg
	@rm -f *.mjp
	@rm -f *.mp4



#*********************************************************************************************************************************************************************
 #zsy_1_1
/home/rainzsy/projects/Hi3559A/V100R001C02SPC020/01.software/board/Hi3559AV100_SDK_V2.0.2.0/mpp/Makefile.param 

# Makefile.param
#
# Only global variable should be defined here.
# All the variables must be used as "export" and "?=".
# Otherwise, there will be some errors, when Makefile.param is nested.

# Use this file as the following sample
# ifeq ($(PARAM_FILE), )
#     PARAM_FILE:=../Makefile.param
#     include $(PARAM_FILE)
# endif

#
# .config is generated by menuconfig, all the configs can be defined in menuconfig.
#

export PARAM_FILE
PARAM_DIR=$(shell pwd)/$(shell dirname $(PARAM_FILE))

### zsy_1_1_1
include $(PARAM_DIR)/cfg.mak

export HIWORK_PATH?=/hiwork

ifeq ($(CONFIG_KERNEL_BIT), KERNEL_BIT_32)
    export ARCH=arm
else
    export ARCH=arm64
endif

export PRODUCT?=IPC
export MPP_BUILD=n

# export global variables
export HIARCH?=$(CONFIG_HI_ARCH)
export HI_SUBARCH?=$(CONFIG_HI_SUBARCH)
export HICHIP?=$(CONFIG_HI_CHIP_TYPE)
export ARM_ARCH?=$(CONFIG_ARM_ARCH_TYPE)

ifeq ($(CONFIG_HI_ARCH),$(filter $(CONFIG_HI_ARCH), hi3559av100 hi3516cv500))
    export ARCH_LIBNAME?=$(CONFIG_HI_ARCH)
else
    export ARCH_LIBNAME?=$(CONFIG_HI_SUBARCH)
endif

export ARCH_DIR?=$(CONFIG_HI_ARCH)
export EXT_DRV?=$(CONFIG_HI_ARCH)
export INTER_DRV?=$(CONFIG_HI_ARCH)

# uclibc or glibc
export LIBC?=$(CONFIG_LIBC_TYPE)

# linux or HuaweiLite
export OSTYPE?=$(CONFIG_OS_TYPE)
export KERNEL_NAME?=$(CONFIG_KERNEL_VERSION)


# Whether support the debug information. HI_DEBUG or HI_RELEASE or AXIS
export HI_RLS_MODE?=$(CONFIG_HI_RLS_MODE)

#不管是release和debug这里都让DBG_FLAG=0，不能编译为debug??
ifeq ($(HI_RLS_MODE),HI_DEBUG)
        export DBG_FLAG=0
else
        export DBG_FLAG=0
endif

# cpu type single/big-little
export CPU_TYPE?=$(CONFIG_CPU_TYPE)

# -g
export HIGDB?=$(CONFIG_HI_GDB)

# FPGA board or not
export FPGA?=$(CONFIG_HI_FPGA)

# CROSS，定义交叉编译器
export CROSS_COMPILE?=$(CONFIG_HI_CROSS)
export CROSS?=$(CONFIG_HI_CROSS_LIB)

ifeq ($(HIARCH), )
	$(error HIARCH not defined! Please check!)
endif

ifeq ($(LIBC), )
	$(error LIBC not defined! Please check!)
endif

ifeq ($(FPGA),y)
	export HI_FPGA:=HI_FPGA

	ifeq ($(CONFIG_UMAP6),y)
		export UMAP:=UMAP6
	else ifeq ($(CONFIG_UMAP7),y)
		export UMAP:=UMAP7
	else ifeq ($(CONFIG_UMAP7P),y)
		export UMAP:=UMAP7P
	else
		export UMAP:=UMAPXXX
	endif
else
	export HI_FPGA:=HI_XXXX
endif

###############################################################################
# Get the local SDK_ROOT path or RELEASE_ROOT path by PARAM_FILE.
# PARAM_FILE is configed at Makefile before include this file
# export SDK_PATH?=$(shell cd $(shell pwd)/`dirname $(PARAM_FILE)`/..; pwd)
export SDK_PATH?=$(PARAM_DIR)/..
export MPP_PATH?=$(PARAM_DIR)
export DRV_ROOT?=$(SDK_PATH)/drv
export OSAL_ROOT?=$(SDK_PATH)/osal

# Define the object output directory
ifeq ($(HIARCH), hi3559av100)
    ifeq ($(MPP_BUILD), y)
    	export EXTDRV:=drv/extdrv/$(EXT_DRV)
    	export REL_DIR=$(SDK_PATH)/mpp/out/$(HIARCH)/$(OSTYPE)/$(CPU_TYPE)
    	export SAMPLE_DIR=$(SDK_PATH)/mpp/sample/$(HIARCH)
    else
    	#### MPP_BUILD=n ######
    	export EXTDRV:=drv/extdrv
    	export REL_DIR=$(SDK_PATH)/mpp/out/$(OSTYPE)/$(CPU_TYPE)
    	export SAMPLE_DIR=$(SDK_PATH)/mpp/sample

    endif
else
    ifeq ($(MPP_BUILD), y)
    	export EXTDRV:=drv/extdrv/$(EXT_DRV)
    	export REL_DIR=$(SDK_PATH)/mpp/out/$(HIARCH)/$(ARM_ARCH)/$(CPU_TYPE)_$(OSTYPE)
    	export SAMPLE_DIR=$(SDK_PATH)/mpp/sample/$(HIARCH)
    else
    	#### MPP_BUILD=n ######
    	export EXTDRV:=drv/extdrv
    	export REL_DIR=$(SDK_PATH)/mpp
    	export SAMPLE_DIR=$(SDK_PATH)/mpp/sample
    endif
endif

#------------------------------------------------------------------------------

###############################################################################
# Common CFLAGS, build flags for all MPP libs and drivers
export MPP_CFLAGS:= -Wall

# Driver CFLAGS, build flags for linux kernel kbuild EXTRA_CFLAGS or liteos drivers
export DRV_CFLAGS:= -Wall

# Libs CFLAGS, build flags for linux or liteos libs
export LIBS_CFLAGS

# Libs LDFLAGS, link flags for linux or liteos libs
export LIBS_LD_CFLAGS
#------------------------------------------------------------------------------

MPP_CFLAGS += -D$(HI_RLS_MODE)
#MPP_CFLAGS += -g

 
ifeq ($(HIGDB), y)
	MPP_CFLAGS += -g
endif

ifeq ($(MPP_BUILD), y)
	DRV_CFLAGS += --warn-stack-usage=500
else
	MPP_CFLAGS += -Wno-error=implicit-function-declaration
	DRV_CFLAGS += -Wno-error=implicit-function-declaration
endif


# Define the param of audio
export AUDIO_PATH?=$(MPP_PATH)/cbb/audio/component/lib/$(HIARCH)/$(CROSS)/$(OSTYPE)

export AUDIO_LIBA ?= $(REL_LIB)/libVoiceEngine.a\
                     $(REL_LIB)/libupvqe.a\
                     $(REL_LIB)/libdnvqe.a\
		     $(REL_LIB)/libaacenc.a\
		     $(REL_LIB)/libaacdec.a

export AUDIO_LIBS ?= $(REL_LIB)/libVoiceEngine.so\
                     $(REL_LIB)/libupvqe.so\
                     $(REL_LIB)/libdnvqe.so\
		     $(REL_LIB)/libaacenc.so\
		     $(REL_LIB)/libaacdec.so


# LIB GLOBAL CFLAGS
ifeq ($(HIARCH),$(filter $(HIARCH), hi3559av100es))

ifeq ($(CPU_TYPE),single)
	LIBS_CFLAGS    += -mcpu=cortex-a53
	LIBS_LD_CFLAGS += -mcpu=cortex-a53
else
	LIBS_CFLAGS    += -mcpu=cortex-a73.cortex-a53
	LIBS_LD_CFLAGS += -mcpu=cortex-a73.cortex-a53
endif

else ifeq ($(HIARCH),$(filter $(HIARCH), hi3519av100))
	LIBS_CFLAGS    += -mcpu=cortex-a53 -mfloat-abi=softfp -mfpu=neon-vfpv4
	LIBS_LD_CFLAGS += -mcpu=cortex-a53 -mfloat-abi=softfp -mfpu=neon-vfpv4
endif


# common CFLAGS
LIBS_CFLAGS    += -fno-aggressive-loop-optimizations -ldl -ffunction-sections -fdata-sections -O2
LIBS_LD_CFLAGS += -fno-aggressive-loop-optimizations

# secure CFLAGS
LIBS_CFLAGS    += -fstack-protector -fPIC
LIBS_LD_CFLAGS += -fstack-protector -Wl,-z,relro -Wl,-z,noexecstack -fPIC

###############################################################################

#********************* Macro for version management*****************************
VER_X ?= 1
VER_Y ?= 0
VER_Z ?= 0
VER_P ?= 0
VER_B ?= 10
MPP_CFLAGS += -DVER_X=$(VER_X) -DVER_Y=$(VER_Y) -DVER_Z=$(VER_Z) -DVER_P=$(VER_P) -DVER_B=$(VER_B)
#*******************************************************************************

MPP_CFLAGS += -D$(CONFIG_USER_BIT) -D$(CONFIG_KERNEL_BIT)

# -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE is for mmap64
ifeq ($(CONFIG_KERNEL_BIT),KERNEL_BIT_64)
	LIBS_CFLAGS += -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE
	LIBS_LD_CFLAGS += -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE
endif

ifeq ($(MPP_BUILD), y)
        COMMON_INCLUDE := -I$(MPP_PATH)/cbb/include
        COMMON_INCLUDE += -I$(MPP_PATH)/cbb/base/include
        COMMON_INCLUDE += -I$(MPP_PATH)/cbb/base/arch/$(HIARCH)/include
        COMMON_INCLUDE += -I$(MPP_PATH)/cbb/sys/include
        COMMON_INCLUDE += -I$(MPP_PATH)/cbb/vdec/vdec/include
        COMMON_INCLUDE += -I$(MPP_PATH)/cbb/vo/include
        COMMON_INCLUDE += -I$(MPP_PATH)/component/securec/include

        LIBS_CFLAGS += $(COMMON_INCLUDE)
        DRV_CFLAGS  += $(COMMON_INCLUDE)
        MPP_CFLAGS  += $(COMMON_INCLUDE)
endif


export JPEGE DCF=$(CONFIG_HI_JPEGE_DCF)

ifeq ($(JPEGE DCF), y)
         MPP_CFLAGS += -DENABLE_JPEGEDCF
endif


### zsy_1_1_2

# include the config file of platform
include $(MPP_PATH)/Makefile.$(OSTYPE).param

# End!!





#*********************************************************************************************************************************************************************
##zsy_1_2
/home/rainzsy/projects/Hi3559A/V100R001C02SPC020/01.software/board/Hi3559AV100_SDK_V2.0.2.0/mpp/sample/Makefile.param
# Hisilicon Hi35xx sample Makefile.param

ifeq ($(PARAM_FILE), )
     PARAM_FILE:=../../Makefile.param
     include $(PARAM_FILE)
endif

################# select sensor type for your sample ###############################
####    SONY_IMX477_MIPI_8M_30FPS_12BIT            #################
####    SONY_IMX477_MIPI_8M_60FPS_12BIT            #################
####    SONY_IMX477_MIPI_12M_30FPS_12BIT           #################
####    SONY_IMX477_MIPI_9M_50FPS_10BIT            #################
####    SONY_IMX477_MIPI_9M_60FPS_10BIT            #################
####    SONY_IMX290_MIPI_2M_30FPS_12BIT            #################
####    SONY_IMX290_MIPI_2M_30FPS_12BIT_WDR3TO1    #################
####    SONY_IMX334_SLAVE_MIPI_8M_30FPS_12BIT      #################
####    SONY_IMX334_MIPI_8M_30FPS_12BIT            #################
####    SONY_IMX334_MIPI_8M_30FPS_12BIT_WDR2TO1    #################
####    SONY_IMX277_SLVS_8M_120FPS_10BIT           #################
####    SONY_IMX277_SLVS_8M_30FPS_12BIT            #################
####    SONY_IMX277_SLVS_8M_60FPS_12BIT            #################
####    SONY_IMX277_SLVS_12M_30FPS_12BIT           #################
####    SONY_IMX277_SLVS_2M_240FPS_12BIT           #################

SENSOR0_TYPE ?= SONY_IMX334_MIPI_8M_30FPS_12BIT
SENSOR1_TYPE ?= SONY_IMX334_MIPI_8M_30FPS_12BIT
SENSOR2_TYPE ?= SONY_IMX334_MIPI_8M_30FPS_12BIT
SENSOR3_TYPE ?= SONY_IMX334_MIPI_8M_30FPS_12BIT
SENSOR4_TYPE ?= SONY_IMX277_SLVS_8M_30FPS_12BIT
SENSOR5_TYPE ?= SONY_IMX277_SLVS_8M_30FPS_12BIT
SENSOR6_TYPE ?= SONY_IMX277_SLVS_8M_30FPS_12BIT
SENSOR7_TYPE ?= SONY_IMX277_SLVS_8M_30FPS_12BIT


SENSOR_LIBS := $(REL_LIB)/lib_hiae.a
SENSOR_LIBS += $(REL_LIB)/libisp.a
SENSOR_LIBS += $(REL_LIB)/lib_hidehaze.a
SENSOR_LIBS += $(REL_LIB)/lib_hidrc.a
SENSOR_LIBS += $(REL_LIB)/lib_hildci.a
SENSOR_LIBS += $(REL_LIB)/libsns_imx477.a
#SENSOR_LIBS += $(REL_LIB)/libsns_imx299.a
#SENSOR_LIBS += $(REL_LIB)/libsns_imx299_slvs.a
SENSOR_LIBS += $(REL_LIB)/libsns_imx290.a
SENSOR_LIBS += $(REL_LIB)/libsns_imx334.a
SENSOR_LIBS += $(REL_LIB)/libsns_imx334_slave.a
SENSOR_LIBS += $(REL_LIB)/libsns_imx277_slvs.a
SENSOR_LIBS += $(REL_LIB)/lib_hiawb.a


MPI_LIBS := $(REL_LIB)/libmpi.a
MPI_LIBS += $(REL_LIB)/libhdmi.a
MPI_LIBS += $(REL_LIB)/libdpu_rect.a
MPI_LIBS += $(REL_LIB)/libdpu_match.a
MPI_LIBS += $(REL_LIB)/libhiavslut.a
MPI_LIBS += $(REL_LIB)/libpos_query.a

ifeq ($(CONFIG_HI_MOTIONFUSION_SUPPORT), y)
MPI_LIBS += $(REL_LIB)/libmotionfusion.a
endif

ifeq ($(CONFIG_HI_MONO_COLOR_FUSION_SUPPORT),y)
MPI_LIBS  += $(REL_LIB)/libmcf.a
endif

COMMON_DIR ?= $(PWD)/../common
AUDIO_ADP_DIR ?= $(PWD)/../audio/adp

INC_FLAGS := -I$(COMMON_DIR)
INC_FLAGS += -I$(REL_INC)
INC_FLAGS += -I$(AUDIO_ADP_DIR)
INC_FLAGS += -I$(OSAL_ROOT)/include

INC_FLAGS += -I$(SDK_PATH)/$(EXTDRV)/tlv320aic31
INC_FLAGS += -I$(SDK_PATH)/$(EXTDRV)/motionsensor/motionsensor_mng
INC_FLAGS += -I$(SDK_PATH)/$(EXTDRV)/motionsensor/motionsensor_chip/pub
	
ISP_VERSION := ISP_V2
CFLAGS += -Wall -g $(INC_FLAGS) -D$(HIARCH) -D$(HI_FPGA) -lpthread -lm -ldl -D$(ISP_VERSION)
CFLAGS += -lstdc++
CFLAGS += -DSENSOR0_TYPE=$(SENSOR0_TYPE)
CFLAGS += -DSENSOR1_TYPE=$(SENSOR1_TYPE)
CFLAGS += -DSENSOR2_TYPE=$(SENSOR2_TYPE)
CFLAGS += -DSENSOR3_TYPE=$(SENSOR3_TYPE)
CFLAGS += -DSENSOR4_TYPE=$(SENSOR4_TYPE)
CFLAGS += -DSENSOR5_TYPE=$(SENSOR5_TYPE)
CFLAGS += -DSENSOR6_TYPE=$(SENSOR6_TYPE)
CFLAGS += -DSENSOR7_TYPE=$(SENSOR7_TYPE)

################ select audio codec type for your sample ################
ACODEC_TYPE ?= ACODEC_TYPE_INNER
#external acodec
#ACODEC_TYPE ?= ACODEC_TYPE_TLV320AIC31
INNER_HDMI ?= y

ifeq ($(ACODEC_TYPE), ACODEC_TYPE_INNER)
	CFLAGS += -DHI_ACODEC_TYPE_INNER
endif


ifeq ($(ACODEC_TYPE), ACODEC_TYPE_TLV320AIC31)
	CFLAGS += -DHI_ACODEC_TYPE_TLV320AIC31
endif

ifeq ($(INNER_HDMI), y)
	CFLAGS += -DHI_ACODEC_TYPE_HDMI
endif

#########################################################################

CFLAGS += $(LIBS_CFLAGS)   $(MPP_CFLAGS)

COMM_SRC := $(wildcard $(COMMON_DIR)/*.c)

#DEL_SRC  := $(COMMON_DIR)/sample_comm_audio.c
#DEL_SRC  += $(COMMON_DIR)/sample_comm_ive.c
#COMM_SRC := $(filter-out $(DEL_SRC), $(COMM_SRC))

COMM_OBJ := $(COMM_SRC:%.c=%.o)



#*********************************************************************************************************************************************************************
##zsy_1_1_1

/home/rainzsy/projects/Hi3559A/V100R001C02SPC020/01.software/board/Hi3559AV100_SDK_V2.0.2.0/mpp/cfg.mak
#
# Automatically generated file; DO NOT EDIT.
# BVT SDK Platform Configuration
#

#
# General Setup
#
# CONFIG_HI3559AV100ES is not set
export CONFIG_HI3559AV100=y
# CONFIG_HI3519AV100 is not set
# CONFIG_HI3516CV500 is not set
# CONFIG_HI3516EV200 is not set
export CONFIG_HI_CHIP_TYPE=0x3559A100
export CONFIG_HI_ARCH=hi3559av100
export CONFIG_SMP=y
# CONFIG_AMP is not set
export CONFIG_ARM_ARCH_TYPE=smp
# CONFIG_CPU_TYPE_SINGLE is not set
# CONFIG_CPU_TYPE_BIG_LITTLE is not set
export CONFIG_CPU_TYPE_MULTI_CORE=y
export CONFIG_CPU_TYPE=multi-core
export CONFIG_VERSION_ASIC=y
export CONFIG_HI_FPGA=n
export CONFIG_LINUX_OS=y
# CONFIG_HUAWEI_LITEOS_OS is not set
export CONFIG_OS_TYPE=linux
export CONFIG_LINUX_4_9_y=y
export CONFIG_KERNEL_VERSION=linux-4.9.y
# CONFIG_KERNEL_AARCH64_HISIV610 is not set
export CONFIG_KERNEL_AARCH64_HIMIX100=y
export CONFIG_HI_CROSS=aarch64-himix100-linux-
export CONFIG_LIBC_TYPE=glibc
export CONFIG_KERNEL_BIT=KERNEL_BIT_64
# CONFIG_USER_AARCH64_HISIV610 is not set
export CONFIG_USER_AARCH64_HIMIX100=y
export CONFIG_HI_CROSS_LIB=aarch64-himix100-linux-
export CONFIG_USER_BIT=USER_BIT_64
export CONFIG_RELEASE_TYPE_RELEASE=y
# CONFIG_RELEASE_TYPE_DEBUG is not set,模式设置
export CONFIG_HI_RLS_MODE=HI_RELEASE

#
# Media Modules Setup
#

#
# media base config
#
export CONFIG_HI_VB_EXTPOOL_SUPPORT=y

#
# media sys config
#
export CONFIG_HI_SYS_SUPPORT=y
export CONFIG_HI_SYS_SCALE_COEF_SUPPORT=y
export CONFIG_HI_SYS_SCALE_COEF_ONLINE_SUPPORT=y

#
# media vi config
#
export CONFIG_HI_VI_SUPPORT=y
export CONFIG_HI_VI_BT656=y
export CONFIG_HI_VI_MIPI=y
export CONFIG_HI_ISP_2DOF_DIS_SUPPORT=y
# CONFIG_HI_VI_MONO_COLOR_FUSION is not set
export CONFIG_HI_VI_LDCV1_SUPPORT=y
# CONFIG_HI_VI_LDCV2_SUPPORT is not set
# CONFIG_HI_VI_LDCV3_SUPPORT is not set
export CONFIG_HI_VI_SENDYUV_SUPPORT=y
export CONFIG_HI_VI_SRC_SUPPORT=y
export CONFIG_HI_VI_STITCH_SUPPORT=y
# CONFIG_HI_VI_CHN_EARLY_INT_SUPPORT is not set
export CONFIG_HI_VI_PARALLEL_SUPPORT=y
export CONFIG_HI_VI_3DNRX_SUPPORT=y
export CONFIG_HI_VI_USERPIC_SUPPORT=y
export CONFIG_HI_VI_COVEREX_OVERLAYEX_SUPPORT=y
export CONFIG_HI_VI_LUMA_SUPPORT=y
export CONFIG_HI_VI_FPN_SUPPORT=y
export CONFIG_HI_VI_EXTCHN_SUPPORT=y
# CONFIG_HI_VI_CASCADE_SUPPORT is not set
export CONFIG_HI_SNAP_SUPPORT=y
export CONFIG_HI_PIPE_RECEIVER=y

#
# media isp config
#
export CONFIG_HI_ISP_SUPPORT=y

#
# media dis config
#
export CONFIG_HI_DIS_SUPPORT=y

#
# media vpss config
#
export CONFIG_HI_VPSS_SUPPORT=y
export CONFIG_HI_VPSS_SBS=y
export CONFIG_HI_VPSS_SHARPEN=y
export CONFIG_HI_VPSS_2SCALE_SUPPORT=y

#
# media avs config
#
export CONFIG_HI_AVS_SUPPORT=y

#
# media gdc config
#
export CONFIG_HI_GDC_SUPPORT=y
export CONFIG_HI_GDC_FISHEYE_SUPPORT=y
# CONFIG_HI_GDC_NNIE_SHARE_RAM is not set

#
# media vgs config
#
export CONFIG_HI_VGS_SUPPORT=y
export CONFIG_HI_VGS_STITCH_SUPPORT=y
# CONFIG_HI_VGS_IVE_PRE_SUPPORT is not set

#
# media chnl config
#
export CONFIG_HI_CHNL_SUPPORT=y

#
# media venc config
#
export CONFIG_HI_VENC_SUPPORT=y
export CONFIG_HI_H265E_SUPPORT=y
export CONFIG_HI_H264E_SUPPORT=y
export CONFIG_HI_JPEGE_SUPPORT=y
export CONFIG_HI_PRORES_SUPPORT=y
export CONFIG_HI_LOWDELAY_SUPPORT=y
export CONFIG_HI_JPEGE_DCF=y
# CONFIG_HI_BUFFSHARE_SUPPORT is not set
export CONFIG_HI_ADVSMARTP_SUPPORT=y
export CONFIG_HI_BIPREDB_SUPPORT=y

#
# media vdec config
#
export CONFIG_HI_VDEC_SUPPORT=y
export CONFIG_HI_H265D_SUPPORT=y
export CONFIG_HI_H264D_SUPPORT=y
export CONFIG_VDEC_IP=VDEC_IP_VDH
export CONFIG_HI_JPEGD_SUPPORT=y
export CONFIG_HI_JPEGD_RGB_OUTPUT_SUPPORT=y
export CONFIG_VDEC_ROTATION_SUPPORT=y
export CONFIG_VDEC_USERPIC_SUPPORT=y
export CONFIG_VDEC_USERDATA_SUPPORT=y

#
# media vo config
#
export CONFIG_HI_VO_SUPPORT=y
export CONFIG_HI_VO_HD=y
export CONFIG_HI_VO_PLAY_CTL=y
export CONFIG_HI_VO_LUMA=y
export CONFIG_HI_VO_COVER_OSD_SUPPORT=y
export CONFIG_HI_VO_VGS=y
export CONFIG_HI_VO_GRAPH=y
export CONFIG_HI_VO_BATCH=y
export CONFIG_HI_VO_WBC=y

#
# media region config
#
export CONFIG_HI_REGION_SUPPORT=y

#
# media audio config
#
export CONFIG_HI_AUDIO_SUPPORT=y
export CONFIG_HI_ACODEC_SUPPORT=y
export CONFIG_HI_ACODEC_VERSION=V900
export CONFIG_HI_ACODEC_MAX_GAIN=56
export CONFIG_HI_ACODEC_MIN_GAIN=0
export CONFIG_HI_ACODEC_GAIN_STEP=3
export CONFIG_HI_ACODEC_FAST_POWER_SUPPORT=y
export CONFIG_HI_DOWNVQE_SUPPORT=y
export CONFIG_HI_TALKVQE_SUPPORT=y
export CONFIG_HI_RECORDVQE_SUPPORT=y

#
# media hdr config
#
export CONFIG_HI_HDR_SUPPORT=y

#
# media mcf config
#
# CONFIG_HI_MONO_COLOR_FUSION_SUPPORT is not set

#
# Device Driver Setup
#

#
# drv config
#
export CONFIG_DRV=y
export CONFIG_EXTDRV=y
export CONFIG_INTERDRV=y
export CONFIG_CIPHER=y
export CONFIG_HIUSER=y
export CONFIG_MIPI_TX=y
export CONFIG_MIPI_RX=y
export CONFIG_HI_IR=y
export CONFIG_HI_WDG=y
export CONFIG_HI_SYSCFG=y

#
# Component Setup
#

#
# Component hdmi Config
#
export CONFIG_HI_HDMI_SUPPORT=y

#
# Component hifb Config
#
export CONFIG_HI_HIFB_SUPPORT=y

#
# Component svp Config
#
export CONFIG_HI_SVP_SUPPORT=y
export CONFIG_HI_SVP_DSP=y
export CONFIG_HI_SVP_LITEOS=y
export CONFIG_HI_SVP_CNN=y
export CONFIG_HI_SVP_RUNTIME=y
export CONFIG_HI_SVP_IVE=y
export CONFIG_HI_SVP_MD=y
export CONFIG_HI_SVP_DPU_RECT=y
export CONFIG_HI_SVP_DPU_MATCH=y
# CONFIG_HI_SVP_OTHERS is not set

#
# Component photo Config
#
export CONFIG_HI_PHOTO_SUPPORT=y

#
# Component tde Config
#
export CONFIG_HI_TDE_SUPPORT=y

#
# Component pciv Config
#
export CONFIG_HI_PCIV_SUPPORT=y

#
# Component avs lut Config
#
export CONFIG_HI_AVS_LUT_SUPPORT=y

#
# Component pos_query Config
#
export CONFIG_HI_POS_QUERY_SUPPORT=y

#
# Component tzasc Config
#
# CONFIG_HI_TZASC_SUPPORT is not set

#
# Component motionfusion config
#
# CONFIG_HI_MOTIONFUSION_SUPPORT is not set

#
# Component pm Config
#
# CONFIG_HI_PM_SUPPORT is not set

#
# HISYSLINK Setup
#

#
# hisyslink config
#
export CONFIG_HISYSLINK=y

#
# Debug Config  配置调试模式zsy 
#
##################################################################
export CONFIG_HI_GDB_NO=y  
# CONFIG_HI_GDB_YES is not set
export CONFIG_HI_GDB=n 
##################################################################
#export CONFIG_HI_GDB_NO=n  
# CONFIG_HI_GDB_YES is not set
#export CONFIG_HI_GDB=y



export CONFIG_HI_LOG_TRACE_SUPPORT=y
export CONFIG_HI_LOG_TRACE_ALL=y
# CONFIG_HI_LOG_TRACE_ERR is not set
# CONFIG_HI_LOG_TRACE_WARN is not set
# CONFIG_HI_LOG_TRACE_INFO is not set
export CONFIG_HI_LOG_TRACE_LEVEL=7

#
# Test Config
#




#*********************************************************************************************************************************************************************
##zsy_1_1_2

# use C01 to indicate uclibc, C02 to  indicate glibc, C00 to indicate FPGA.
ifeq ($(FPGA), y)
	export CVER?=.C$(DBG_FLAG)0
else ifeq ($(LIBC),glibc)
    export CVER?=.C$(DBG_FLAG)2
else
    export CVER?=.C$(DBG_FLAG)1
endif

ifeq ($(HIARCH), $(filter $(HIARCH),hi3519av100 hi3516cv500))
    ifeq ($(ARM_ARCH), smp)
	POSTFIX:=-smp
    else
	POSTFIX:=
    endif
endif

##############################################################################
# Allocated the kernel position
ifeq ($(MPP_BUILD), y)
    ifeq ($(HIARCH),$(filter $(HIARCH), hi3559av100es hi3559av100))
		export KERNEL_ROOT?=$(HIWORK_PATH)/osdrv$(HIARCH)$(CVER)/opensource/kernel/$(KERNEL_NAME)_$(CPU_TYPE)
    else ifeq ($(HIARCH),$(filter $(HIARCH), hi3519av100))
        export KERNEL_ROOT?=$(HIWORK_PATH)/osdrv$(HI_SUBARCH)$(CVER)/opensource/kernel/$(KERNEL_NAME)$(POSTFIX)
    else
        export KERNEL_ROOT?=$(HIWORK_PATH)/osdrv$(HIARCH)$(CVER)/opensource/kernel/$(KERNEL_NAME)$(POSTFIX)
    endif
else
    ifeq ($(HIARCH),$(filter $(HIARCH), hi3559av100es hi3559av100))
	export KERNEL_ROOT?=$(SDK_PATH)/osdrv/opensource/kernel/$(KERNEL_NAME)_$(CPU_TYPE)
    else
        export KERNEL_ROOT?=$(SDK_PATH)/../../osdrv/opensource/kernel/$(KERNEL_NAME)$(POSTFIX)
    endif
endif

OSDRV_PATH:=$(KERNEL_ROOT)/../../..

##############################################################################

# Define cross compiler,添加c/cpp混合编译,$(CROSS)

export CC:=$(CROSS)gcc
export AR:=$(CROSS)ar
export CXX:=$(CROSS)g++

export REL_INC := $(REL_DIR)/include
export REL_LIB := $(REL_DIR)/lib
export REL_KO  := $(REL_DIR)/ko
export REL_OBJ := $(REL_DIR)/obj
export REL_INI := $(REL_DIR)/init

LIBS_LD_CFLAGS += -ldl
MPP_CFLAGS += -Wno-date-time
DRV_CFLAGS += -Wno-date-time







